name: CI/CD Pipeline

on:
  pull_request:
    types: [closed]
    branches: [ main ]

env:
  DOCKER_IMAGE: pooyanazad/dealsdeals
  AWS_REGION: us-east-1

jobs:
  test:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Run tests
        run: |
          cd app
          pip install -r requirements.txt pytest
          python -m pytest test_app.py

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Get version
        id: get_version
        run: |
          VERSION=$(cat VERSION)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./app
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:v${{ env.VERSION }}

  deploy-test:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: test
    steps:
      - uses: actions/checkout@v2
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Deploy to Test EKS
        run: |
          aws eks update-kubeconfig --name deals-eks --region ${{ env.AWS_REGION }}
          kubectl apply -f k8s/test/deployment.yaml
          kubectl apply -f k8s/test/service.yaml
          kubectl rollout status deployment/dealsdeals-deployment -n test

  deploy-prod:
    needs: deploy-test
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - uses: actions/checkout@v2
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Deploy to Prod EKS
        run: |
          aws eks update-kubeconfig --name deals-eks --region ${{ env.AWS_REGION }}
          kubectl apply -f k8s/prod/deployment.yaml
          kubectl apply -f k8s/prod/service.yaml
          kubectl rollout status deployment/dealsdeals-deployment -n prod